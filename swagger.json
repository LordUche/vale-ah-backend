{
  "openapi": "3.0.1",
  "info": {
    "title": "Naija Recipes API",
    "description": "Naija Recipes API",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://vale-ah-backend-staging.herokuapp.com/api"
    }
  ],
  "tags": [
    {
      "name": "Naija Recipes",
      "description": "API for the best Nigerian recipes"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create user",
        "description": "Creates a new user in system",
        "requestBody": {
          "description": "User to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Created new user",
            "content": {}
          },
          "400": {
            "description": "Validation error",
            "content": {}
          },
          "409": {
            "description": "Database conflict",
            "content": {}
          }
        }
      }
    },
    "/users/verify" : {
      "get" : {
        "description" : "Verify if the user is verified",
        "tags": [
          "Auth"
        ],
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "schema" : {
            "type" : "string"
          },
          "example" : "eyJhbGciOiJIUzI1NiJ9.Mg.hbsvkNj_kZvQYNtZxa4r2GXoNRLq1q4xC9qSq48Dwhw"
        } ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "400" : {
            "description" : "Verification token error",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "200" : {
            "description" : "Account verification success"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "description" : "Get a Current user",
        "tags": [
          "Users"
        ],
        "parameters" : [ {
          "name" : "Authorization",
          "in" : "headers",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          
          "200" : {
            "description" : "User Found"
          }
        }
      }
    },
    "/user/password" : {
      "put" : {
        "description" : "Update user profile",
        "tags": [
          "Users"
        ],
        "parameters" : [ {
          "in": "body",
          "name": "password",
          "description": "password to be updated",
          "schema": {
            "$ref": "#/definitions/User"
          }
        } ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/profiles" : {
      "get" : {
        "description" : "Get all users profile",
        "tags": [
          "Profile"
        ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "400" : {
            "description" : "Verification token error",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "200" : {
            "description" : "Record Found"
          }
        }
      }
    },
    "/profiles/{username}" : {
      "get" : {
        "description" : "Get a specific user profile",
        "tags": [
          "Profile"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "description": "username of user",
            "schema": {
              "type":"string"
            }
          }
        ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/recipes": {
      "get" : {
        "description" : "Get all recipes",
        "summary": "Fetch all recipes ",
        "tags": [
          "Recipes"
        ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "200" : {
            "description" : "Success"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create new recipe",
        "description": "This endpoint will create a new recipe",
        "parameters": [{
          "name": "accesstoken",
          "in": "header",
          "schema": {}
        }],
        "requestBody": {
          "description": "Recipe to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Successfully created new recipe",
            "content": {}
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          }
        }
      }
    },
    "/recipes/{slug}": {
      "get" : {
        "description" : "Get single recipe by slug",
        "summary": "Fetch one recipe by slug",
        "tags": [
          "Recipes"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "schema": {
              "type":"string"
            }
          }
        ],
        "responses" : {
          "500" : {
            "description" : "Database connection error"
          },
          "404": {
            "description":"recipe not found"
          },
          "200" : {
            "description" : "Success"
          }
        }
      },
      "put": {
        "tags": [
          "Recipes"
        ],
        "summary": "update recipe",
        "description": "This endpoint will update a recipe",
        "parameters": [{
          "name": "accesstoken",
          "in": "header",
          "schema": {}
        }],
        "requestBody": {
          "description": "Recipe to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Recipe"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Successfully updated recipe",
            "content": {}
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "delete recipe",
        "description": "This endpoint will delete a recipe",
        "parameters": [{
          "name": "slug",
          "in": "path",
          "schema": {
            "type": "string"
          }
        }],
        "responses": {
          "201": {
            "description": "Successfully updated recipe",
            "content": {}
          },
          "400": {
            "description": "Validation Error",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "required": [
          "email",
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "Recipe": {
        "required": [
          "cookingTime",
          "ingredients",
          "preparationTime",
          "steps",
          "title"
        ],
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "ingredients": {
            "type": "array"
          },
          "steps": {
            "type": "object"
          },
          "cookingTime": {
            "type": "number"
          },
          "preparationTime": {
            "type": "number"
          }
        }
      }
    }
  }
}
